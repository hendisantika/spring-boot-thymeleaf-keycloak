{
  "id": "e605a0f2-bd3d-4bd3-8ca2-d90fe1215cba",
  "realm": "Greylian",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxTemporaryLockouts": 0,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "d06641ca-9553-4267-9380-d375d2ca5f30",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "e605a0f2-bd3d-4bd3-8ca2-d90fe1215cba",
        "attributes": {}
      },
      {
        "id": "9aed743c-4326-40f9-88d6-02a43b32a68d",
        "name": "default-roles-greylian",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": [
            "offline_access",
            "uma_authorization"
          ],
          "client": {
            "account": [
              "view-profile",
              "manage-account"
            ]
          }
        },
        "clientRole": false,
        "containerId": "e605a0f2-bd3d-4bd3-8ca2-d90fe1215cba",
        "attributes": {}
      },
      {
        "id": "5eb2f209-c840-40dc-b345-ac9c0bf15f68",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "e605a0f2-bd3d-4bd3-8ca2-d90fe1215cba",
        "attributes": {}
      },
      {
        "id": "598983c1-3473-442e-a14c-fff2be3bb3ce",
        "name": "NICE",
        "description": "NICE",
        "composite": false,
        "clientRole": false,
        "containerId": "e605a0f2-bd3d-4bd3-8ca2-d90fe1215cba",
        "attributes": {}
      }
    ],
    "client": {
      "realm-management": [
        {
          "id": "5f158bb7-2cc5-4151-b030-0144f4b4f8b9",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "3479529c-999c-4607-b989-e30a4c47d160",
          "attributes": {}
        },
        {
          "id": "270d3e3f-86bf-4395-bf4a-414b48493d75",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "3479529c-999c-4607-b989-e30a4c47d160",
          "attributes": {}
        },
        {
          "id": "382f5311-a502-400d-b194-bad6ff461ed2",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "3479529c-999c-4607-b989-e30a4c47d160",
          "attributes": {}
        },
        {
          "id": "98ca6142-50b2-4779-b106-cea6c43e7d2d",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "3479529c-999c-4607-b989-e30a4c47d160",
          "attributes": {}
        },
        {
          "id": "5cf4dfd8-bdb7-4fe7-9d4b-2c5c2e6eee56",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "3479529c-999c-4607-b989-e30a4c47d160",
          "attributes": {}
        },
        {
          "id": "d07bb1bd-5a18-40f8-a717-923daf88c5f9",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "3479529c-999c-4607-b989-e30a4c47d160",
          "attributes": {}
        },
        {
          "id": "6a1952f6-2f5c-4feb-a8b2-1b665d2ebb12",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "3479529c-999c-4607-b989-e30a4c47d160",
          "attributes": {}
        },
        {
          "id": "6ea4d593-a5fa-462f-852c-6431a4743882",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "3479529c-999c-4607-b989-e30a4c47d160",
          "attributes": {}
        },
        {
          "id": "260b00ec-4f7d-4fee-9b3d-5491f1c033db",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "3479529c-999c-4607-b989-e30a4c47d160",
          "attributes": {}
        },
        {
          "id": "8cafa854-9800-4be5-875c-f75a4a6a2e61",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "3479529c-999c-4607-b989-e30a4c47d160",
          "attributes": {}
        },
        {
          "id": "b626eec9-7ea1-4d24-84a6-0bde4654f502",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "3479529c-999c-4607-b989-e30a4c47d160",
          "attributes": {}
        },
        {
          "id": "3e2a6b29-45dd-4b95-adec-78808353f1ac",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "3479529c-999c-4607-b989-e30a4c47d160",
          "attributes": {}
        },
        {
          "id": "2017af13-93b1-47d2-81a2-e1a37c782d2a",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "3479529c-999c-4607-b989-e30a4c47d160",
          "attributes": {}
        },
        {
          "id": "763b322f-07f9-41c6-8888-ffbeedcd4fab",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "view-events",
                "create-client",
                "query-users",
                "query-realms",
                "manage-identity-providers",
                "view-realm",
                "impersonation",
                "manage-realm",
                "manage-users",
                "view-identity-providers",
                "manage-events",
                "manage-authorization",
                "query-groups",
                "view-clients",
                "view-authorization",
                "manage-clients",
                "view-users",
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "3479529c-999c-4607-b989-e30a4c47d160",
          "attributes": {}
        },
        {
          "id": "3fd0e12c-80c0-4f91-980e-2996760529a9",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "3479529c-999c-4607-b989-e30a4c47d160",
          "attributes": {}
        },
        {
          "id": "5facc53b-fca2-4c0c-9a1c-8f5b9dda109e",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "3479529c-999c-4607-b989-e30a4c47d160",
          "attributes": {}
        },
        {
          "id": "175b7576-1e78-482f-8810-446e0c86f434",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "3479529c-999c-4607-b989-e30a4c47d160",
          "attributes": {}
        },
        {
          "id": "95109df0-a610-4bf1-96c8-9fea183c3b87",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-groups",
                "query-users"
              ]
            }
          },
          "clientRole": true,
          "containerId": "3479529c-999c-4607-b989-e30a4c47d160",
          "attributes": {}
        },
        {
          "id": "288401c9-0762-4100-b2c5-a7bbd24855c2",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "3479529c-999c-4607-b989-e30a4c47d160",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "admin-cli": [],
      "account-console": [],
      "broker": [
        {
          "id": "68c5bc83-89ea-4907-a30e-eb86274efd00",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "13f9d1c5-62ac-4987-a939-66bd0170e244",
          "attributes": {}
        }
      ],
      "spring-boot-thymeleaf-keycloak": [],
      "account": [
        {
          "id": "53a6ada3-7198-40fd-a1f4-5e4673c87a1c",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "dad62d3d-c08e-4d82-aec2-7e062d1cdb69",
          "attributes": {}
        },
        {
          "id": "63e78112-3a2c-437a-a689-c6c523189fb2",
          "name": "view-groups",
          "description": "${role_view-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "dad62d3d-c08e-4d82-aec2-7e062d1cdb69",
          "attributes": {}
        },
        {
          "id": "f82a7cab-0b94-4528-8ce0-d9dd52076fd0",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "dad62d3d-c08e-4d82-aec2-7e062d1cdb69",
          "attributes": {}
        },
        {
          "id": "f238f40a-15bb-4070-adcf-24ad53dd0848",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "clientRole": true,
          "containerId": "dad62d3d-c08e-4d82-aec2-7e062d1cdb69",
          "attributes": {}
        },
        {
          "id": "2655d11b-4b4c-46f6-ba4b-ec576da1754d",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "dad62d3d-c08e-4d82-aec2-7e062d1cdb69",
          "attributes": {}
        },
        {
          "id": "34545e99-7e5b-4540-b4b1-880ef2eb1275",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "dad62d3d-c08e-4d82-aec2-7e062d1cdb69",
          "attributes": {}
        },
        {
          "id": "4e5ecdb5-2674-4238-b81c-95076da0a753",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "dad62d3d-c08e-4d82-aec2-7e062d1cdb69",
          "attributes": {}
        },
        {
          "id": "de8f4b8d-75d6-45a4-bfea-d6d6225cc84f",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "clientRole": true,
          "containerId": "dad62d3d-c08e-4d82-aec2-7e062d1cdb69",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "9aed743c-4326-40f9-88d6-02a43b32a68d",
    "name": "default-roles-greylian",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "e605a0f2-bd3d-4bd3-8ca2-d90fe1215cba"
  },
  "requiredCredentials": [
    "password"
  ],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": [
    "totpAppFreeOTPName",
    "totpAppGoogleName",
    "totpAppMicrosoftAuthenticatorName"
  ],
  "localizationTexts": {},
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256",
    "RS256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyExtraOrigins": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256",
    "RS256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessExtraOrigins": [],
  "users": [
    {
      "id": "aa6d3c9b-67ad-490d-9de0-dee5385c69fe",
      "username": "yuji",
      "firstName": "ITADORI",
      "lastName": "YUJI",
      "email": "yuji@yopmail.com",
      "emailVerified": true,
      "createdTimestamp": 1732512067111,
      "enabled": true,
      "totp": false,
      "credentials": [
        {
          "id": "d4bbfa69-ffa0-4f57-9c54-24ad91cd4b4d",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1732512083935,
          "secretData": "{\"value\":\"+M466vgqFVUFTC41n2LJIUyAQ7geWCN+wVYZZxBL6G4=\",\"salt\":\"XZvCGMpnnQL8fy/ypCctgA==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-greylian",
        "NICE"
      ],
      "notBefore": 0,
      "groups": []
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account",
          "view-groups"
        ]
      }
    ]
  },
  "clients": [
    {
      "id": "dad62d3d-c08e-4d82-aec2-7e062d1cdb69",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/Greylian/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/Greylian/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "organization",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "00f56d57-178f-440d-9af9-4546ab59a3b0",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/Greylian/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/Greylian/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "03e2e846-ee43-48e4-a2c2-b363044309c4",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "organization",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "570d661d-9df5-4660-9d8a-f02e5a132253",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "client.use.lightweight.access.token.enabled": "true"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "organization",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "13f9d1c5-62ac-4987-a939-66bd0170e244",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "true"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "organization",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "3479529c-999c-4607-b989-e30a4c47d160",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "true"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "organization",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "7238335a-3653-461d-aad8-2130886fa719",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/Greylian/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/admin/Greylian/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "client.use.lightweight.access.token.enabled": "true",
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "9777b955-d495-46ca-863e-89189f7f459e",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "organization",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "d2eb2e5e-7f3d-4ad9-96df-b57aa4fa29a1",
      "clientId": "spring-boot-thymeleaf-keycloak",
      "name": "spring-boot-thymeleaf-keycloak",
      "description": "spring-boot-thymeleaf-keycloak",
      "rootUrl": "http://localhost:8080",
      "adminUrl": "http://localhost:8080",
      "baseUrl": "http://localhost:8080",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "5Lzi66sHd4YZnRQ03d2iCxsxyZG71FAz",
      "redirectUris": [
        "http://localhost:8080/login/oauth2/code/keycloak"
      ],
      "webOrigins": [
        "*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "oidc.ciba.grant.enabled": "false",
        "client.secret.creation.time": "1732511911",
        "backchannel.logout.session.required": "true",
        "backchannel.logout.url": "http://host.docker.internal:8080/logout/connect/back-channel/keycloak",
        "post.logout.redirect.uris": "http://localhost:8080##*",
        "oauth2.device.authorization.grant.enabled": "false",
        "display.on.consent.screen": "false",
        "use.jwks.url": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "organization",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "cdf7e228-7185-4f08-9610-b179ed232527",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "consent.screen.text": "",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "ffef046b-a487-45c9-a518-ea1b3303a43e",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "17b60507-c23b-4d7a-adb3-5cd920c30b0b",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "4949428f-f89f-43d5-8b94-b708ac0dba5c",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "711ae3ec-1a70-434a-bc8b-eec4a1e3c9fe",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${addressScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "ee2f2189-757e-4fab-874b-c930abeebc6f",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "introspection.token.claim": "true",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "84170400-efc0-4a33-b583-490f7cafaa7f",
      "name": "organization",
      "description": "Additional claims about the organization a subject belongs to",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${organizationScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "7bdaeeae-f24c-4a19-80c3-2d7a4541d0df",
          "name": "organization",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-organization-membership-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "organization",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ]
    },
    {
      "id": "26556822-1b24-4b68-9d15-12eafdeeeadf",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "consent.screen.text": "${rolesScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "900a3f7d-6f14-4352-b3a1-381c9d3f3609",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "c560ec52-144d-47e8-aa44-9401c1e6d5c1",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "acea437c-3872-4e19-b84d-b73c23779328",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "e5f5b5d1-8761-4903-96b4-0c580f9cac45",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "02d188cc-fcd8-4287-857e-02bdc71e8c40",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "d5f5e3b7-446a-483f-9f18-71e8ef5fce6d",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "5329a9b0-68a7-465f-8086-9aacf72c4335",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${profileScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "43deb85a-256e-4ae8-bcae-d41883827d2c",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "bc1ae875-cf11-4aef-8996-10ad2cf75931",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        },
        {
          "id": "423ab3e1-22fe-4006-a9f2-39be0de9d74c",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "3abe0e0c-6df2-43c5-9c2b-2f48355a8f20",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "27d39295-256a-41d1-8f64-823153ec7d9c",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ea4b4438-aa46-4112-b1b2-ea0bdf576396",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "18d7121e-d762-41f7-8fab-4df6b77320a7",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "1c660fed-7fd0-4b81-a744-e4f8520b97d2",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "05c63bab-100b-4f21-bc40-50c33fec5beb",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ee5a5cdf-d7b3-4c0b-901a-97fb0ed24d44",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4dc01b71-504d-4b17-987e-38f4147075cf",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6318d917-f8ed-46ab-83c7-0a59c0204dc8",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "dd7cf14b-43a8-4b3d-94ba-1b773723ca2f",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "de1cb7d3-1f28-4d9c-9ce6-daec4b7fc580",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "4fd3aafe-4684-44ed-ae89-0f164ac4574f",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "63efd4bf-2ae2-4ab8-8b0e-20728608fd70",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ad4824ee-63ed-44fe-b666-2044afac2d27",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "7b930337-96a0-439f-8535-feedb1ecd1ff",
      "name": "saml_organization",
      "description": "Organization Membership",
      "protocol": "saml",
      "attributes": {
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "3a6b2eb8-df91-453e-a892-af8f5ec4e192",
          "name": "organization",
          "protocol": "saml",
          "protocolMapper": "saml-organization-membership-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "10fdfaf4-5a77-4973-a942-599f78c28289",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${phoneScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "340b168f-ca9f-4ed0-8d62-2115d91af60b",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "bd1daf20-0c55-4047-8a59-1faf7f31f978",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "700c5ee9-f6d6-414e-8ae1-f46c03362f0d",
      "name": "basic",
      "description": "OpenID Connect scope for add all basic claims to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "a9a1b233-28a6-4106-9e6b-5cb9c94ba35e",
          "name": "auth_time",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "AUTH_TIME",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "auth_time",
            "jsonType.label": "long"
          }
        },
        {
          "id": "8bb717fb-2798-49ca-a6b4-38f455e74c94",
          "name": "sub",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-sub-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "150c2e85-b06f-4e7c-9726-326fa55f384b",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${emailScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "1d614f1c-09dd-4cb4-8314-e9307da3b76b",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "af8641f6-05f4-4c27-b4ec-2e90e916bc46",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "saml_organization",
    "profile",
    "email",
    "roles",
    "web-origins",
    "acr",
    "basic"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt",
    "organization"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "referrerPolicy": "no-referrer",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "c8f824fc-878a-4b17-9679-0b50219eb01f",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-role-list-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-full-name-mapper",
            "saml-user-property-mapper",
            "oidc-usermodel-property-mapper",
            "saml-user-attribute-mapper",
            "oidc-address-mapper",
            "oidc-sha256-pairwise-sub-mapper"
          ]
        }
      },
      {
        "id": "29c15f49-92cc-479d-954a-64c992291f34",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-user-property-mapper",
            "oidc-full-name-mapper",
            "saml-role-list-mapper",
            "oidc-usermodel-property-mapper",
            "saml-user-attribute-mapper",
            "oidc-address-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-sha256-pairwise-sub-mapper"
          ]
        }
      },
      {
        "id": "8287b54b-80d5-4228-b270-32af902991f4",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "2173acb5-70f8-449b-a7b2-00cc7c2d2b3f",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "d2c91719-c378-4939-88a6-9c0fe34badf8",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      },
      {
        "id": "4fc7cada-add7-470b-9f4a-1abe22d612e2",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "ead24f2a-efb5-4874-bf8a-9b2e1145d694",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      },
      {
        "id": "5d776ded-551d-42b7-bfe3-e9fbbab34bfc",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "8961cbde-f7ac-4c0c-8484-81588474f4ef",
        "name": "hmac-generated-hs512",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "82444015-1622-489f-9b1f-f107669d7de8"
          ],
          "secret": [
            "VcaxoNfOgXaUiPrckk6ttReL0yjIGoj_fRyBWBQ0dgz6LT2b7jeBp5VYTsjijdbviv3VTMX1AGDKA2QpODK_r0o7-Kqo8s3oNATZUePNLw0tyTG6ji13ksEVNVgUzIKTx6fCXGl2NEJzlyXNyZItJO-OZaHo3IKCDezGVxl2xBQ"
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS512"
          ]
        }
      },
      {
        "id": "7bfa41af-b896-4880-8398-95d6b16197f4",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "68a35817-5db5-40cd-b1ee-bbd4b4a480e5"
          ],
          "secret": [
            "SRXtH9Oi9NlYg39-O7laqA"
          ],
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "769f14d6-e634-4340-b874-d64f41f61606",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEpAIBAAKCAQEAo5yFb8g2aBN/y8aDDahquGIE7o6oYTPQEjp6UuuBB/RSn70tdL/AZF4GJQ8EBy1v9D7iXU/aeV0LLmawO+AWYMa60n3AWRL6NxKBhiNC4/5t6UctYogpb4beofVysgGjyzVJNWvzEBN8npbVAn/9dUsoo5+SLrXonxXmhta6aey/oDrNfydeomwMeEa5KdIsF9NizUfHOxa7XDUsFa9OmsCPzmO2BbUsg7iKjEShEDAV91KdWoZ9s8qtVp65WyNNks7YvHT41BXXaRHUtdT3/HT6Nk8zEiZD62Th14okB2rtOTy4R1FHo4T6xPPQJrMUDH4SVbgVvO+Vaw7STsk4lwIDAQABAoIBABk/MPQT4BllUOYgBt8Xqwgyz/ID/4WoWiZF8dRT1QBmOk2+AoKuiEC0pZwYWhXFdC4regDOLrdlnTEW1YEXzjw2zmNm1kSoggX3jBcn382Q2GMUAbPfsQ0tsbMqTf2b9SuJWHeu5b4IU8WhHtOY7oKoC2hcWlFs7q2F0qHiBrgLegpW0YfM/37hD0jla4zjlNZrHr5xBjh18BB2xLX1QDlUu8RexDkXh4iPN81rkcsiiH/+uOa7dlal1HPyBHegEU10rrGy7emllKyfc9yE9N9HbBzPknSi+DC8sN9RjxHYIQnBXtudmY1zau9BKxkOinlwLewEe/4G9/LjZMFzyykCgYEA33udSyQVK75Qt+Xm6gN8I0KVe1s3/Pa2S7nP3X/DmNHLLz4aYFiBrCrR8SrLgC2s8vtRqN/GZrJ3dQMmRoy/TXXP4nRtXOYG+ad3N77wUU1ZbZjG9J1Rk2P8aSuJCJjepotBZvShadeGNBpwSL+6fQK0r1IredPvgWx0Iz1VsSsCgYEAu2rKA7HCDBz5IIcECOiKl9tX8rIwEu5hllRH9rPXwhKmA/ZqLVri78Bw7kSBLEIdYkGCnZ2mKqVhaymDbJ0DzysLqnTYTqG/0/RhaqqTgo4XPGo0F/lQM2JZ+fMzmUHdIb/eStfNLPpFFqQhzuIU+pK+cSjNFVqCUam3x1KlaEUCgYBUoUk1lVp3EEEdAvDpGZy+9Y4KAsc3Am6SSrFO3f1CN+BL6aavaZThj+2k+GHMDn/6G/YWj3dgmKDoLOMnwFEJkl3BEfoAPhPSIvrgn2v+Pd5pxHtDUvf7atfBM/1Wxh060G1aAbXGkRl/TavLwN9sS8QEyIcyQXHnfxyT47w5tQKBgQCoMm6aYi2EMXxjdMhqNkgrgO6tIL2EP+vUvk7XWQ+JXLMhW0Ru7+I6yLqRG2nSDoPQanqOea1nGIUVZ2xLTZ7djgQqNjLqXr+JuQi0ceFwiZTQ439dBKK1es7FQz5LjJCoeUlGYeYBN5pJd4Pf54ZsWsYPSE7FmzTZlTcZ61IHAQKBgQDSdgg8h5NysAto8zZVpziCE/tNicwH570jgZCKSteK5qVxSM0qRuHaZVWtpqYVC7J4aBke/ILPpbiLsBA53Ob6gI/vmf8qORmXnZbyYTdrNlxGmtvl9MrvH3PMlOzKjSm3WiybCCiBAus2NwJXFWJxgDeDgOzzn5e5m/iSA/grow=="
          ],
          "keyUse": [
            "ENC"
          ],
          "certificate": [
            "MIICnzCCAYcCBgGTYcFBHTANBgkqhkiG9w0BAQsFADATMREwDwYDVQQDDAhHcmV5bGlhbjAeFw0yNDExMjUwNTE2MTVaFw0zNDExMjUwNTE3NTVaMBMxETAPBgNVBAMMCEdyZXlsaWFuMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAo5yFb8g2aBN/y8aDDahquGIE7o6oYTPQEjp6UuuBB/RSn70tdL/AZF4GJQ8EBy1v9D7iXU/aeV0LLmawO+AWYMa60n3AWRL6NxKBhiNC4/5t6UctYogpb4beofVysgGjyzVJNWvzEBN8npbVAn/9dUsoo5+SLrXonxXmhta6aey/oDrNfydeomwMeEa5KdIsF9NizUfHOxa7XDUsFa9OmsCPzmO2BbUsg7iKjEShEDAV91KdWoZ9s8qtVp65WyNNks7YvHT41BXXaRHUtdT3/HT6Nk8zEiZD62Th14okB2rtOTy4R1FHo4T6xPPQJrMUDH4SVbgVvO+Vaw7STsk4lwIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQCVfgJOsh8UQhFezvsahsK0My2BMnLErt0nFwWAp5KM9Qa17X5zcDPRwQEwmDpWSJK3fG34dfIhJGQehCN0J+n3d5ODtbAQeG5zuAV9Nc3pwOzHkC/bWAz5CusBb9J2Vcfj3mywXiIJnV4qig3DJeuv8iBZKzUasqHtUeiWDpmRTxfnwkuPugyuJOXLHFr50XhBGfDMEhYx8ScpZLlpYx21tg/+zue0L1FZMGhkjx1qc6L56OAOrvFl5MJXmZDsFwmptAFaUGHH7cYkiPwV4E2PK5k2N8AX3e+ylxQOluI3RLgCiRexsi0qPzYGEtBlejc2mEdDcexHrgOF6AKgFp3N"
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "RSA-OAEP"
          ]
        }
      },
      {
        "id": "0b8714d4-a6e0-423e-81dc-45e5faae6f32",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEpAIBAAKCAQEA4JV8J7yYUiAZneVsVZ8li97Lb35AJIyGvrpF4CWKyr3dITGQ3fBkVyXX+kJI0GOXpZtp2fj7AbZMuvvWMs/+V90Pq5GTdt2PybpexsnijYlIR+UqAg7O/jSR8HnvB4TqNPC2EBoHoUPFd2B2OTtGfaCo8NEy6EDOuwDSZlvrirkkN/p9FapAW/+lGv36UHPnCprNQqJiexFS4RkEAwAyFHqDvjzcnKsxGEd3rRb7daM9foSl0j6WZD63DWy9J0y4gJDvgsbSMAJUJ+kXeJ+l5S973wepbFBkFPRwfuUcXjv9vth85ZKBVajj0S6XhvRHUN0sxOmLy7AmC6m0cLcrhQIDAQABAoIBAAUJSnki++Yjks99Ue+dm7Gbnm5H+NeY+yXodswEVizJEzNnsXr4pWy64YawLoKAfpRtJsjc54Ft/XctUewJHrKzt2KT532r5vSRebH1hwoWK7PJCicfqTlUI82uaP4p1zgMCdkp7EU2iDAZeVfmjLnL0jNhovBIZm+/y01rqZ2OZzgBL/jNWgatVMJOpAz7qsQQAsyEaFDfhV3IX6KcfhfRn/VIxXB1mpY8VwX7PYl3nxtIxdePwS2SbQsf/OrSOvyY3G9uiZMMLM+siInxu0Xaz/bjYRK0qe3nLz0OsYpmU7rSO9OvG+MfhhmgfZZsaKJFnNZ0E2kf/RkmE6Ol8MUCgYEA/BL9N/aB7HX9/AxRmXbV8sQqmSeN9kVFTN3n1U+oYbRKcNbrCnkzvqHi91Hd0h3WBtOifPTeKIQPic4t3P2S10raVPQ0Pt8Zh+mOLgyO+28vzlTeo9SfPri3MxOG7RjqFMuVSfpQkTMwRcOVKtSyUiEZQKYzunyQCd4/0VYyW8MCgYEA5BTkp8XM2au0/873cxbdWD+vDUklWR3YaEKkbEAB7qFiOJozcafXxALNQpRPtz3vmmDQ5JUZshnaELNAB5Afo8BHO7BeuVyQzICLiBVUchiAm/+tlieeOQ+iXHDlTzBwuAkK4Ydmee+YKjDqNgQRsocbdltI+Rr5Kz/2nF9ljxcCgYEAi1L3kHn4X7jrs+cfJuJu6GqSXOpm5apt3kl8fQM1PyOGTY4MhVJuTjxuFWKzZxJEnKtW0RgKvnwXloRWByJEiih+OpxrUCDBnMRzaHJaiRBwbOutzwGTLvirkViGp/+wSeQoVKY857RSRw0OIolDMm/G5Fu4laeJeVrVDSBGXz8CgYAyujLg3a1h/D6VZoLCpiM0rXVRjyMvXuPyzF+lc9b6LAqcbC9k59+lSLo+RJ42MyBHRaEwNbkxU26cqEFlbTicQveU3vUyZNQPp8dgzN2rQqfYClWhP86BAmkqBjH6Gtv3EovI/URdelxthdORj/Yfrsz81fC09rrUU7WVseH0oQKBgQD3rIAG+BfNlM4NyTFDXOSuCRdcglYzhAcodQhM1MVK80EiJFDkTSfurfwLRTxXcvlIe6VQBmZa0PLpP7clFxjlELjGyaKa/BHnY6ZYnePIRfnKFIUyynyItsxV5W5alt4+DmbgaK5iBncDYoTAQcR3gLuviLAFK4zVmBmZqbS4gw=="
          ],
          "keyUse": [
            "SIG"
          ],
          "certificate": [
            "MIICnzCCAYcCBgGTYcFADjANBgkqhkiG9w0BAQsFADATMREwDwYDVQQDDAhHcmV5bGlhbjAeFw0yNDExMjUwNTE2MTVaFw0zNDExMjUwNTE3NTVaMBMxETAPBgNVBAMMCEdyZXlsaWFuMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4JV8J7yYUiAZneVsVZ8li97Lb35AJIyGvrpF4CWKyr3dITGQ3fBkVyXX+kJI0GOXpZtp2fj7AbZMuvvWMs/+V90Pq5GTdt2PybpexsnijYlIR+UqAg7O/jSR8HnvB4TqNPC2EBoHoUPFd2B2OTtGfaCo8NEy6EDOuwDSZlvrirkkN/p9FapAW/+lGv36UHPnCprNQqJiexFS4RkEAwAyFHqDvjzcnKsxGEd3rRb7daM9foSl0j6WZD63DWy9J0y4gJDvgsbSMAJUJ+kXeJ+l5S973wepbFBkFPRwfuUcXjv9vth85ZKBVajj0S6XhvRHUN0sxOmLy7AmC6m0cLcrhQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQCqax6NJkeOBroKpWaJnhWIZzyzEuYvc36TjNibE6auciEHnKUAEVuVUAZYV943giysHREgrlUh9oFm5XxwdHxDV8bd/lAMIcCFmgB9OQ/+IFMs9NdzsjH5stmi6bsPQgklyh3JR2yTpHJOuK/T1VTg3TyiSUTRVyWwU2gPsBLT+tWcFPPdlXTCF+DMdurT6onwKmvhSvabrFcNzCvgK5qb969eqs0ruIQhIEt7PxX8Xyw9sb5qqZ8benkJzQkSDNOFmBDNs+3RsW5OEvjfdYy8UHra+vLMjr+of0AVlJgIUBjzCBmB/W3aS+F9b0DUgn7dBAfW+jhmNU95X4axgr5I"
          ],
          "priority": [
            "100"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "e1063e50-9e43-4e0e-a525-02638444ae08",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "6b2e6a22-b250-4cd2-8d53-727eb2677815",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "018982c3-50f3-4384-89c0-4d4aff7de7d3",
      "alias": "Browser - Conditional Organization",
      "description": "Flow to determine if the organization identity-first login is to be used",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "organization",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "5a2dce91-2e6f-4c75-9e46-f3abb9f417ad",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "c0a9409c-f9ed-4512-affb-1de160111361",
      "alias": "First Broker Login - Conditional Organization",
      "description": "Flow to determine if the authenticator that adds organization members is to be used",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "idp-add-organization-member",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "7aba4f85-f5be-4390-9e92-3308e8039b4a",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "0962277d-7ea0-468b-bffe-e8692055b44d",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "35315dab-5c44-49fe-9be3-30de053f9e21",
      "alias": "Organization",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional Organization",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "a6ba4b12-abc0-4390-a731-786522b7d9f6",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "33081f80-1834-4172-9cfe-68592aa8edda",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "19821cd0-373f-4097-9709-35312b7b1d0f",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "98bac414-8dd0-4c17-8cd7-d3f54987cbeb",
      "alias": "browser",
      "description": "Browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 26,
          "autheticatorFlow": true,
          "flowAlias": "Organization",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "46dc14ff-1165-4301-867a-c21af5e742e9",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "c83f0978-285f-40f1-83f6-60e82e72103e",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "8fc39abe-f9c8-4871-81e3-387b0b85d8fa",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "0b71d3dd-8aff-4a47-9321-04e04235039f",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 50,
          "autheticatorFlow": true,
          "flowAlias": "First Broker Login - Conditional Organization",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "6ee15abc-7264-434d-8117-3b42cd1814b5",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "00398d4c-f9d3-4733-ba11-49e05a8bf623",
      "alias": "registration",
      "description": "Registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "8bffffeb-7e36-4618-bdd4-7cf7e38a3c73",
      "alias": "registration form",
      "description": "Registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-terms-and-conditions",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 70,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "4c3ac1cd-ca56-4304-a1d9-04d553630e78",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "d6821b79-26af-489e-ba80-5efdec8e2eeb",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "9ea8ea1b-11aa-42dd-a7a1-3bc266a29d7c",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "9a016473-44c6-4b97-a184-072c2cf1ba17",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "TERMS_AND_CONDITIONS",
      "name": "Terms and Conditions",
      "providerId": "TERMS_AND_CONDITIONS",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    },
    {
      "alias": "VERIFY_PROFILE",
      "name": "Verify Profile",
      "providerId": "VERIFY_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 90,
      "config": {}
    },
    {
      "alias": "delete_credential",
      "name": "Delete Credential",
      "providerId": "delete_credential",
      "enabled": true,
      "defaultAction": false,
      "priority": 100,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "firstBrokerLoginFlow": "first broker login",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DeviceCodeLifespan": "600",
    "oauth2DevicePollingInterval": "5",
    "parRequestUriLifespan": "60",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false"
  },
  "keycloakVersion": "26.0.0",
  "userManagedAccessAllowed": false,
  "organizationsEnabled": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}
